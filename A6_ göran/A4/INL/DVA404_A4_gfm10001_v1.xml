<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
chan s_msg;
chan r_ack;
chan r_msg;
chan s_ack;

int s_msg_cnt=0;
int r_msg_cnt=0;</declaration><template><name>Sender</name><declaration>clock x;
clock x_Tx;
</declaration><location id="id0" x="352" y="0"><name x="376" y="-16">S_AckTimeOut</name></location><location id="id1" x="128" y="0"><name x="152" y="-16">S_WaitAck</name><label kind="invariant" x="160" y="0">x_Tx &lt;= 5</label></location><location id="id2" x="-128" y="0"><name x="-138" y="-30">S0</name></location><init ref="id2"/><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="216" y="72">s_msg!</label><label kind="assignment" x="184" y="32">x_Tx = 0</label><nail x="288" y="64"/><nail x="192" y="64"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="176" y="-48">x_Tx &gt;= 5</label><nail x="192" y="-64"/><nail x="288" y="-64"/></transition><transition><source ref="id1"/><target ref="id2"/><label kind="synchronisation" x="-24" y="72">r_ack?</label><label kind="assignment" x="-328" y="48">s_msg_cnt = (s_msg_cnt + 1) % 16</label><nail x="64" y="64"/><nail x="-64" y="64"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="-80" y="-48">x &gt;= 1</label><label kind="synchronisation" x="-32" y="-88">s_msg!</label><label kind="assignment" x="80" y="-80">x_Tx = 0</label><nail x="-64" y="-64"/><nail x="64" y="-64"/></transition></template><template><name>Channel</name><location id="id3" x="256" y="96"><name x="246" y="66">Cack</name><urgent/></location><location id="id4" x="480" y="0"><name x="470" y="-30">Ccont</name><urgent/></location><location id="id5" x="256" y="-64"><name x="246" y="-94">Cmsg</name><urgent/></location><location id="id6" x="0" y="0"><name x="-10" y="-30">C0</name></location><init ref="id6"/><transition><source ref="id4"/><target ref="id6"/><nail x="544" y="128"/><nail x="544" y="192"/><nail x="-64" y="192"/><nail x="-64" y="128"/></transition><transition><source ref="id3"/><target ref="id4"/><label kind="synchronisation" x="336" y="72">r_ack!</label><nail x="416" y="96"/></transition><transition><source ref="id6"/><target ref="id3"/><label kind="synchronisation" x="96" y="72">s_ack?</label><nail x="64" y="96"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="synchronisation" x="344" y="-96">r_msg!</label><nail x="320" y="-64"/><nail x="416" y="-64"/></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="96" y="-96">s_msg?</label><nail x="64" y="-64"/><nail x="192" y="-64"/></transition></template><template><name>Receiver</name><declaration>clock x;</declaration><location id="id7" x="0" y="224"><name x="16" y="208">Rerr</name></location><location id="id8" x="448" y="0"><name x="438" y="-30">Rtx</name><urgent/></location><location id="id9" x="256" y="0"><name x="246" y="-30">Rrx</name><label kind="invariant" x="246" y="15">x &lt;= 1</label></location><location id="id10" x="0" y="0"><name x="-10" y="-30">R0</name></location><init ref="id10"/><transition><source ref="id10"/><target ref="id7"/><label kind="guard" x="-192" y="96">s_msg_cnt - r_msg_cnt &gt; 1</label></transition><transition><source ref="id8"/><target ref="id10"/><nail x="384" y="64"/><nail x="64" y="64"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="296" y="-32">x &gt;= 1</label><label kind="synchronisation" x="336" y="-88">s_ack!</label><label kind="assignment" x="392" y="-88">r_msg_cnt = s_msg_cnt</label><nail x="320" y="-64"/><nail x="384" y="-64"/></transition><transition><source ref="id10"/><target ref="id9"/><label kind="synchronisation" x="104" y="-88">r_msg?</label><label kind="assignment" x="224" y="-64">x = 0</label><nail x="64" y="-64"/><nail x="192" y="-64"/></transition></template><system>// Place template instantiations here.
P1Sender = Sender();
P2Channel = Channel();
P3Receiver = Receiver();

// List one or more processes to be composed into a system.
system P1Sender, P2Channel, P3Receiver;</system></nta>